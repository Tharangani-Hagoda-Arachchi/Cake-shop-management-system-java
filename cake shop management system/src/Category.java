/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author DELL
 */
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.sql.*;
import java.util.*;
import javax.swing.table.DefaultTableModel;
import javax.xml.*;
import java.awt.Event.*;


public class Category extends javax.swing.JFrame {

    /**
     * Creates new form Category
     */
    public Category() {
        initComponents();
        
    }
    
    static final String JDBC_DRIVER = "com.mysql.jdbc.Driver";
    static final String DB_URL = "jdbc:mysql://localhost:3306/cakeshop";
    static final String USER = "root";
    static final String PASS = "";
    
        

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelId = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jLabelName = new javax.swing.JLabel();
        jTextFieldId = new javax.swing.JTextField();
        jButtonAdd1 = new javax.swing.JButton();
        jButtonEdit = new javax.swing.JButton();
        jButtonRemove = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jButtonView = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(7, 11, 52));

        jLabelId.setBackground(new java.awt.Color(255, 255, 255));
        jLabelId.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabelId.setForeground(new java.awt.Color(255, 255, 255));
        jLabelId.setText("Category ID");

        jLabelName.setBackground(new java.awt.Color(255, 255, 255));
        jLabelName.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabelName.setForeground(new java.awt.Color(255, 255, 255));
        jLabelName.setText("Category Name");

        jButtonAdd1.setBackground(new java.awt.Color(0, 102, 0));
        jButtonAdd1.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jButtonAdd1.setForeground(new java.awt.Color(255, 255, 255));
        jButtonAdd1.setText("Add New Category");
        jButtonAdd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdd1ActionPerformed(evt);
            }
        });

        jButtonEdit.setBackground(new java.awt.Color(0, 51, 255));
        jButtonEdit.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jButtonEdit.setForeground(new java.awt.Color(255, 255, 255));
        jButtonEdit.setText("Update Selected Category");
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });

        jButtonRemove.setBackground(new java.awt.Color(153, 0, 0));
        jButtonRemove.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jButtonRemove.setForeground(new java.awt.Color(255, 255, 255));
        jButtonRemove.setText("Remove Selected Category");
        jButtonRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveActionPerformed(evt);
            }
        });

        table.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name"
            }
        ));
        jScrollPane1.setViewportView(table);

        jButtonView.setBackground(new java.awt.Color(102, 102, 0));
        jButtonView.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jButtonView.setForeground(new java.awt.Color(255, 255, 255));
        jButtonView.setText("View Category");
        jButtonView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelName)
                            .addComponent(jLabelId))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 129, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jButtonAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonView, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(111, 111, 111))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelId)
                    .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelName))
                        .addGap(105, 105, 105)
                        .addComponent(jButtonAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jButtonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addComponent(jButtonView, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jButtonRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79))
        );

        jMenuBar1.setBackground(new java.awt.Color(153, 0, 51));
        jMenuBar1.setForeground(new java.awt.Color(255, 255, 255));

        jMenu1.setText("DASHBOARD");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu2.setText("CUSTOMER");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        jMenu3.setText("ORDER");
        jMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu3ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        jMenu4.setText("PRODUCT");
        jMenu4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu4ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu4);

        jMenu5.setText("EMPLOYEE");
        jMenu5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu5ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    void updateTable(){
    Connection con = null;
        Statement sta = null;

        try {
            
            Class.forName(JDBC_DRIVER);

         
            con = DriverManager.getConnection(DB_URL, USER, PASS);

            sta = con.createStatement();
            String sql = "SELECT * FROM category_detail";
           
            ResultSet rs = sta.executeQuery(sql);
            ResultSetMetaData rsmetadata=rs.getMetaData();
            int columns=rsmetadata.getColumnCount();
            DefaultTableModel dtm=new DefaultTableModel();
            Vector columns_name= new Vector();
            Vector data_raws=new Vector();
            
            for(int i=1; i<=columns; i++){
                columns_name.addElement(rsmetadata.getColumnName(i));
           
            }
            dtm.setColumnIdentifiers(columns_name);

           
            while (rs.next()) {
                data_raws=new Vector();
                for(int j=1; j<=columns;j++){
                    data_raws.addElement(rs.getString(j));
                
                }
                dtm.addRow(data_raws);
                table.setModel(dtm);
                
                

               
               
            }

           
            rs.close();

        } catch (SQLException ex) {
            
            ex.printStackTrace();
        } catch (Exception ex) {
            
            ex.printStackTrace();
        } finally {
            
            try {
                if (sta != null) {
                    sta.close();
                  
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }

            try {
                if (con != null) {
                    con.close();
                    
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
        
    
    }
    private void jButtonAdd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdd1ActionPerformed
 Connection con = null;
        PreparedStatement pst = null;

        if(jTextFieldId.getText().equals("")){
                JOptionPane.showMessageDialog(null,"PLEASE ENTER CATEGORY ID");}
        
        else if(jTextFieldName.getText().equals("")){
                JOptionPane.showMessageDialog(null,"PLEASE ENTER CATEGORY Name");}
        
        else{
        try {
       
            
            Class.forName(JDBC_DRIVER);
            con = DriverManager.getConnection(DB_URL, USER, PASS);
            String query = "INSERT INTO category_detail(cat_id,cat_name) VALUES (?,?)";
            pst = (PreparedStatement) con.prepareStatement(query);

            pst.setInt(1, Integer.parseInt(jTextFieldId.getText()));
            pst.setString(2, jTextFieldName.getText());
            int res = pst.executeUpdate();
            JOptionPane.showMessageDialog(null,"DATA ADDED SUCESSFULLY");
            updateTable();
            
            jTextFieldId.setText("");
            jTextFieldName.setText("");
            
            

        } catch (SQLException ex) {
            
            ex.printStackTrace();
        } catch (Exception ex) {
            
            ex.printStackTrace();
        } finally {
            
            try {
                if (pst != null) {
                    pst.close();
                    
                }
            } catch (SQLException se2) {

            }
            try {
                if (con != null) {
                    con.close();
                    
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
        }
        
               
        
    }//GEN-LAST:event_jButtonAdd1ActionPerformed

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
        // TODO add your handling code here:
        if(jTextFieldId.getText().equals("")){
                JOptionPane.showMessageDialog(null,"PLEASE ENTER CATEGORY ID WHICH WANT TO UPDATE");}
        
        else if(jTextFieldName.getText().equals("")){
                JOptionPane.showMessageDialog(null,"PLEASE ENTER CATEGORY Name");}
        
        else{
        Connection con = null;
        PreparedStatement sta = null;
        

        try {
            
            Class.forName(JDBC_DRIVER);

         
            con = DriverManager.getConnection(DB_URL, USER, PASS);
           

            
            String sql = "UPDATE category_detail SET cat_name=? Where cat_id=?";
            sta = (PreparedStatement) con.prepareStatement(sql);
            
            
            sta.setString(1, jTextFieldName.getText());
            sta.setInt(2,Integer.parseInt( jTextFieldId.getText()));
            
            
            sta.executeUpdate();
             
            
             JOptionPane.showMessageDialog(this,"sucssesfuly Updated");
              updateTable();
        
           
            

               
               
           

        } catch (SQLException ex) {
            
            ex.printStackTrace();
        } catch (Exception ex) {
            
            ex.printStackTrace();
        } finally {
            
            try {
                if (sta != null) {
                    sta.close();
                  
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }

            try {
                if (con != null) {
                    con.close();
                    
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
        }
    }//GEN-LAST:event_jButtonEditActionPerformed

    private void jButtonViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonViewActionPerformed
        // TODO add your handling code here:

updateTable();
    

        
    
    }//GEN-LAST:event_jButtonViewActionPerformed

    private void jButtonRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveActionPerformed
        // TODO add your handling code here:
        if(table.getSelectionModel().isSelectionEmpty()){
            JOptionPane.showMessageDialog(null,"Please Select Item to delete");
          
        }
        else{
        int row=table.getSelectedRow();
        
        String cell=table.getModel().getValueAt(row, 0).toString();
        
    

        Connection con = null;
        PreparedStatement sta = null;

        try {
            
            Class.forName(JDBC_DRIVER);

         
            con = DriverManager.getConnection(DB_URL, USER, PASS);

            
            String sql = "DELETE FROM category_detail WHERE cat_id= " +cell;
            sta = (PreparedStatement) con.prepareStatement(sql);
           
             sta.execute();
             JOptionPane.showMessageDialog(null,"sucssesfuly Delceted");
             
             updateTable();

           
            

               
               
           

        } catch (SQLException ex) {
            
            ex.printStackTrace();
        } catch (Exception ex) {
            
            ex.printStackTrace();
        } finally {
            
            try {
                if (sta != null) {
                    sta.close();
                  
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }

            try {
                if (con != null) {
                    con.close();
                    
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
        }
    }//GEN-LAST:event_jButtonRemoveActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        // TODO add your handling code here:
         new DashBoardForm().setVisible(true);
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
        // TODO add your handling code here:
         new Customer().setVisible(true);
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void jMenu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu3ActionPerformed
        // TODO add your handling code here:
         new Bill().setVisible(true);
    }//GEN-LAST:event_jMenu3ActionPerformed

    private void jMenu4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu4ActionPerformed
        // TODO add your handling code here:
         new ProductForm().setVisible(true);
    }//GEN-LAST:event_jMenu4ActionPerformed

    private void jMenu5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu5ActionPerformed
        // TODO add your handling code here:
         new Employee().setVisible(true);
    }//GEN-LAST:event_jMenu5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Category().setVisible(true);
                
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd1;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JButton jButtonRemove;
    private javax.swing.JButton jButtonView;
    private javax.swing.JLabel jLabelId;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldId;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
