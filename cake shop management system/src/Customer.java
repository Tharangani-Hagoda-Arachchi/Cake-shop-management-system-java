/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author DELL
 */
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.sql.*;
import java.util.*;
import javax.swing.table.DefaultTableModel;
import javax.xml.*;
public class Customer extends javax.swing.JFrame {

    /**
     * Creates new form Customer
     */
    public Customer() {
        initComponents();
    }
    
      static final String JDBC_DRIVER = "com.mysql.jdbc.Driver";
    static final String DB_URL = "jdbc:mysql://localhost:3306/cakeshop";
    static final String USER = "root";
    static final String PASS = "";
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelCusName = new javax.swing.JLabel();
        jTextFieldCusId = new javax.swing.JTextField();
        jLabelCusId = new javax.swing.JLabel();
        jLabelCusTel = new javax.swing.JLabel();
        jLabelCusEmail = new javax.swing.JLabel();
        jTextFieldCusName = new javax.swing.JTextField();
        jTextFieldCusTel = new javax.swing.JTextField();
        jTextFieldCusEmail = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCus = new javax.swing.JTable();
        jButtonInsert = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jButtonView = new javax.swing.JButton();
        jButtonRemove = new javax.swing.JButton();
        jButtonClear = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(27, 22, 38));

        jLabelCusName.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabelCusName.setForeground(new java.awt.Color(255, 255, 255));
        jLabelCusName.setText("Name");

        jLabelCusId.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabelCusId.setForeground(new java.awt.Color(255, 255, 255));
        jLabelCusId.setText("Customer ID");

        jLabelCusTel.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabelCusTel.setForeground(new java.awt.Color(255, 255, 255));
        jLabelCusTel.setText("Tel");

        jLabelCusEmail.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabelCusEmail.setForeground(new java.awt.Color(255, 255, 255));
        jLabelCusEmail.setText("Email");

        jTableCus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Telephone", "Email"
            }
        ));
        jScrollPane1.setViewportView(jTableCus);

        jButtonInsert.setBackground(new java.awt.Color(0, 102, 0));
        jButtonInsert.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jButtonInsert.setForeground(new java.awt.Color(255, 255, 255));
        jButtonInsert.setText("INSERT");
        jButtonInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertActionPerformed(evt);
            }
        });

        jButtonUpdate.setBackground(new java.awt.Color(0, 51, 255));
        jButtonUpdate.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jButtonUpdate.setForeground(new java.awt.Color(255, 255, 255));
        jButtonUpdate.setText("Update ");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonView.setBackground(new java.awt.Color(102, 102, 0));
        jButtonView.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jButtonView.setForeground(new java.awt.Color(255, 255, 255));
        jButtonView.setText("View ");
        jButtonView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonViewActionPerformed(evt);
            }
        });

        jButtonRemove.setBackground(new java.awt.Color(153, 0, 0));
        jButtonRemove.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jButtonRemove.setForeground(new java.awt.Color(255, 255, 255));
        jButtonRemove.setText("Remove ");
        jButtonRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveActionPerformed(evt);
            }
        });

        jButtonClear.setBackground(new java.awt.Color(255, 153, 0));
        jButtonClear.setForeground(new java.awt.Color(255, 255, 255));
        jButtonClear.setText("CLEAR");
        jButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelCusTel)
                            .addComponent(jLabelCusEmail)
                            .addComponent(jLabelCusId)
                            .addComponent(jLabelCusName))
                        .addGap(75, 75, 75)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldCusId, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                            .addComponent(jTextFieldCusName)
                            .addComponent(jTextFieldCusTel)
                            .addComponent(jTextFieldCusEmail)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonView, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(jButtonClear, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldCusId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelCusId))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(45, 45, 45)
                                        .addComponent(jLabelCusName))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(33, 33, 33)
                                        .addComponent(jTextFieldCusName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(35, 35, 35)
                                .addComponent(jLabelCusTel))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(106, 106, 106)
                                .addComponent(jTextFieldCusTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelCusEmail)
                            .addComponent(jTextFieldCusEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jButtonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(jButtonView, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jButtonRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jButtonClear, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(49, 49, 49))
        );

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    void updateTable(){
    Connection con = null;
        Statement sta = null;

        try {
            
            Class.forName(JDBC_DRIVER);

         
            con = DriverManager.getConnection(DB_URL, USER, PASS);

            sta = con.createStatement();
            String sql = "SELECT * FROM customer_detail";
           
            ResultSet rs = sta.executeQuery(sql);
            ResultSetMetaData rsmetadata=rs.getMetaData();
            int columns=rsmetadata.getColumnCount();
            DefaultTableModel dtm=new DefaultTableModel();
            Vector columns_name= new Vector();
            Vector data_raws=new Vector();
            
            for(int i=1; i<=columns; i++){
                columns_name.addElement(rsmetadata.getColumnName(i));
           
            }
            dtm.setColumnIdentifiers(columns_name);

           
            while (rs.next()) {
                data_raws=new Vector();
                for(int j=1; j<=columns;j++){
                    data_raws.addElement(rs.getString(j));
                
                }
                dtm.addRow(data_raws);
                jTableCus.setModel(dtm);
                
                

               
               
            }

           
            rs.close();

        } catch (SQLException ex) {
            
            ex.printStackTrace();
        } catch (Exception ex) {
            
            ex.printStackTrace();
        } finally {
            
            try {
                if (sta != null) {
                    sta.close();
                  
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }

            try {
                if (con != null) {
                    con.close();
                    
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
        
    
    }
    private void jButtonInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertActionPerformed
        Connection con = null;
        PreparedStatement pst = null;

        if(jTextFieldCusId.getText().equals("")){
            JOptionPane.showMessageDialog(null,"PLEASE ENTER CUSTOMER ID");}

        else if(jTextFieldCusName.getText().equals("")){
            JOptionPane.showMessageDialog(null,"PLEASE ENTER CUStOMER Name");}
        
        else if(jTextFieldCusTel.getText().equals("")){
            JOptionPane.showMessageDialog(null,"PLEASE ENTER CUStOMER TELEPHONE NO");}
        else if(jTextFieldCusEmail.getText().equals("")){
            JOptionPane.showMessageDialog(null,"PLEASE ENTER CUStOMER EMAIL");}



        else{
            try {

                Class.forName(JDBC_DRIVER);
                con = DriverManager.getConnection(DB_URL, USER, PASS);
                String query = "INSERT INTO customer_detail(cus_id,cus_name,cus_tel,cus_email) VALUES (?,?,?,?)";
                pst = (PreparedStatement) con.prepareStatement(query);

                pst.setInt(1, Integer.parseInt(jTextFieldCusId.getText()));
                pst.setString(2, jTextFieldCusName.getText());
                pst.setString(3, jTextFieldCusTel.getText());
                pst.setString(4, jTextFieldCusEmail.getText());
                int res = pst.executeUpdate();
                JOptionPane.showMessageDialog(null,"DATA ADDED SUCESSFULLY");
                updateTable();

                jTextFieldCusId.setText("");
                jTextFieldCusName.setText("");
                jTextFieldCusTel.setText("");
                jTextFieldCusEmail.setText("");

            } catch (SQLException ex) {

                ex.printStackTrace();
            } catch (Exception ex) {

                ex.printStackTrace();
            } finally {

                try {
                    if (pst != null) {
                        pst.close();

                    }
                } catch (SQLException se2) {

                }
                try {
                    if (con != null) {
                        con.close();

                    }
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
        }

    }//GEN-LAST:event_jButtonInsertActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        // TODO add your handling code here:
        if(jTextFieldCusId.getText().equals("")){
            JOptionPane.showMessageDialog(null,"PLEASE ENTER CUSTOMER ID WHICH WANT TO UPDATE");}

     
        else if(jTextFieldCusName.getText().equals("")){
            JOptionPane.showMessageDialog(null,"PLEASE ENTER CUStOMER Name");}
        
        else if(jTextFieldCusTel.getText().equals("")){
            JOptionPane.showMessageDialog(null,"PLEASE ENTER CUStOMER TELEPHONE NO");}
        else if(jTextFieldCusEmail.getText().equals("")){
            JOptionPane.showMessageDialog(null,"PLEASE ENTER CUStOMER EMAIL");}

        else{
            Connection con = null;
            PreparedStatement sta = null;

            try {

                Class.forName(JDBC_DRIVER);

                con = DriverManager.getConnection(DB_URL, USER, PASS);

                String sql = "UPDATE customer_detail SET cus_name=?,cus_tel=?,cus_email=? Where cus_id=?";
                sta = (PreparedStatement) con.prepareStatement(sql);

                sta.setString(1, jTextFieldCusName.getText());
                sta.setString(2, jTextFieldCusTel.getText());
                sta.setString(3, jTextFieldCusEmail.getText());
                sta.setInt(4,Integer.parseInt( jTextFieldCusId.getText()));

                sta.executeUpdate();

                JOptionPane.showMessageDialog(this,"sucssesfuly Updated");
                updateTable();
                 jTextFieldCusId.setText("");
                jTextFieldCusName.setText("");
                jTextFieldCusTel.setText("");
                jTextFieldCusEmail.setText("");

            } catch (SQLException ex) {

                ex.printStackTrace();
            } catch (Exception ex) {

                ex.printStackTrace();
            } finally {

                try {
                    if (sta != null) {
                        sta.close();

                    }
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }

                try {
                    if (con != null) {
                        con.close();

                    }
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jButtonViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonViewActionPerformed
        // TODO add your handling code here:

        updateTable();

    }//GEN-LAST:event_jButtonViewActionPerformed

    private void jButtonRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveActionPerformed
        // TODO add your handling code here:
        if(jTableCus.getSelectionModel().isSelectionEmpty()){
            JOptionPane.showMessageDialog(null,"Please Select Item to delete");

        }
        else{
            int row=jTableCus.getSelectedRow();

            String cell=jTableCus.getModel().getValueAt(row, 0).toString();

            Connection con = null;
            PreparedStatement sta = null;

            try {

                Class.forName(JDBC_DRIVER);

                con = DriverManager.getConnection(DB_URL, USER, PASS);

                String sql = "DELETE FROM customer_detail WHERE cus_id= " +cell;
                sta = (PreparedStatement) con.prepareStatement(sql);

                sta.execute();
                JOptionPane.showMessageDialog(null,"sucssesfuly Delceted");

                updateTable();

            } catch (SQLException ex) {

                ex.printStackTrace();
            } catch (Exception ex) {

                ex.printStackTrace();
            } finally {

                try {
                    if (sta != null) {
                        sta.close();

                    }
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }

                try {
                    if (con != null) {
                        con.close();

                    }
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_jButtonRemoveActionPerformed

    private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
        // TODO add your handling code here:
         jTextFieldCusId.setText("");
                jTextFieldCusName.setText("");
                jTextFieldCusTel.setText("");
                jTextFieldCusEmail.setText("");
    }//GEN-LAST:event_jButtonClearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Customer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonInsert;
    private javax.swing.JButton jButtonRemove;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JButton jButtonView;
    private javax.swing.JLabel jLabelCusEmail;
    private javax.swing.JLabel jLabelCusId;
    private javax.swing.JLabel jLabelCusName;
    private javax.swing.JLabel jLabelCusTel;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableCus;
    private javax.swing.JTextField jTextFieldCusEmail;
    private javax.swing.JTextField jTextFieldCusId;
    private javax.swing.JTextField jTextFieldCusName;
    private javax.swing.JTextField jTextFieldCusTel;
    // End of variables declaration//GEN-END:variables
}
